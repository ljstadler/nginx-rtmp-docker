name: Publish

on:
    workflow_dispatch:
    schedule:
        - cron: "0 1 1 * *"

jobs:
    check:
        runs-on: ubuntu-latest
        outputs:
            SHOULD_BUILD: ${{ steps.should_build.outputs.SHOULD_BUILD }}
            NGINX_TAG: ${{ steps.should_build.outputs.NGINX_TAG }}
            RTMP_TAG: ${{ steps.should_build.outputs.RTMP_TAG }}
            TAG: ${{ steps.should_build.outputs.TAG }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Should build?
              id: should_build
              run: |
                  nginx_tag=$(gh api repos/nginx/nginx/releases/latest -q ".tag_name[8:]")
                  rtmp_tag=$(gh api repos/winshining/nginx-http-flv-module/releases/latest -q ".tag_name[1:]")
                  tag=$(gh api users/$GITHUB_REPOSITORY_OWNER/packages/container/nginx-rtmp-docker/versions -q ".[0].metadata.container.tags.[0]" || true)
                  if [ "$nginx_tag-$rtmp_tag" != "$tag" ]; then
                    echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
                    echo "NGINX_TAG=$nginx_tag" >> $GITHUB_OUTPUT
                    echo "RTMP_TAG=$rtmp_tag" >> $GITHUB_OUTPUT
                    echo "TAG=$nginx_tag-$rtmp_tag" >> $GITHUB_OUTPUT
                  fi
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    build-and-push-image:
        needs: check
        if: needs.check.outputs.SHOULD_BUILD == 1
        runs-on: ubuntu-latest

        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to ghcr.io
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./Dockerfile
                  platforms: linux/amd64,linux/arm64
                  push: true
                  provenance: false
                  build-args: |
                      NGINX_VERSION=${{ needs.check.outputs.NGINX_TAG }}
                      RTMP_VERSION=${{ needs.check.outputs.RTMP_TAG }}
                  tags: |
                      ghcr.io/${{ github.repository }}:latest
                      ghcr.io/${{ github.repository }}:${{ needs.check.outputs.TAG }}

            - name: ghcr.io cleanup
              uses: dataaxiom/ghcr-cleanup-action@v1
              with:
                  keep-n-tagged: 3
                  token: ${{ secrets.GITHUB_TOKEN }}
